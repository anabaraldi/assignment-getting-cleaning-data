.99 ^ 20
.98 ^ 20
source('~/workspace/verios/verios-r/markowitz/mainScript.R', echo=TRUE)
library(ggplot2)
source('~/workspace/verios/verios-r/markowitz/mainScript.R', echo=TRUE)
portfolio
source('~/workspace/verios/verios-r/markowitz/mainScript.R', echo=TRUE)
portfolio
markPortfolio
mergedData$X.1
setwd("~/workspace/data-science/Getting-Cleaning-Data")
if(!file.exists("./gdp")){dir.create("./gdp")}
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1,destfile="./gdp/gdp.csv",method="curl")
download.file(fileUrl2,destfile="./gdp/education.csv",method="curl")
gdp <- read.csv("./gdp/gdp.csv", skip = 4); education <- read.csv("./gdp/education.csv")
gdp$X.1 <- as.numeric(as.character(gdp$X.1)) ## to transform the factor in numeric without changing the order
mergedData <- merge(education, gdp[1:190,], by.x = "CountryCode", by.y = "X") #we don't use all the lines in gdp because there are some that aren't countries
arranged <- arrange(mergedData, desc(X.1))
arranged[13,1]
##Question 4
mergedData %>%
group_by(Income.Group) %>%
summarise(mean(X.1))
##Question 5
mergedData$X.1groups <- cut2(mergedData$X.1, g=5) ## it will create a new col by divinding the original one in five groups (quantiles)
table(mergedData$X.1groups, mergedData$Income.Group)
??cut2
library(dplyr)
gdp$X.1 <- as.numeric(as.character(gdp$X.1)) ## to transform the factor in numeric without changing the order
mergedData <- merge(education, gdp[1:190,], by.x = "CountryCode", by.y = "X") #we don't use all the lines in gdp because there are some that aren't countries
arranged <- arrange(mergedData, desc(X.1))
arranged[13,1]
##Question 4
mergedData %>%
group_by(Income.Group) %>%
summarise(mean(X.1))
##Question 5
library(Hmisc)
mergedData$X.1groups <- cut2(mergedData$X.1, g=5) ## it will create a new col by divinding the original one in five groups (quantiles)
table(mergedData$X.1groups, mergedData$Income.Group)
mergedData$X.1
cut2(mergedData$X.1, g=5)
table(mergedData$X.1groups, mergedData$Income.Group)
setwd("~/workspace/assignment-getting-cleaning-data")
?read.file
?read.table
setwd("~/workspace/assignment-getting-cleaning-data/UCI HAR Dataset")
read.table("./test/X_test.txt")
testSet <- read.table("./test/X_test.txt")
testLabel <- read.table("./test/y_test.txt")
trainSet <- read.table("./train/y_train.txt")
trainLabel <- read.table("./train/y_train.txt")
head(trainSet)
trainSet
trainSet <- read.table("./train/X_train.txt")
trainLabel <- read.table("./train/y_train.txt")
head(trainSet)
dim(trainSet)
tail(trainSet)
train(label)
dim(trainLabel)
dim(testSet)
testSet <- read.table("./test/X_test.txt")
testLabel <- read.table("./test/y_test.txt")
testSubject <- read.table("./test/subject_test.txt")
testSubject
dim(testSubject)
dim(testSet)
dim(testLabel)
completeSet <- rbind(testSet, trainSet)
completeLabel <- rbind(testLabel, trainLabel)
completeSubject <- rbind(testSubject, trainSubject)
trainSubject <- read.table("./train/subject_train.txt")
completeSubject <- rbind(testSubject, trainSubject)
dim(completeSet)
dim(completeLabel)
dim(completeSubject)
features <- read.table("./features.txt")
features
which("mean" | "std" | "Mean")
?which
which(features, "mean" | "std" | "Mean")
which(features[2], "mean" | "std" | "Mean")
class(features)
class(features[[2]])
?read.table
features <- read.table("./features.txt", stringsAsFactors=FALSE)
class(features[[2]])
which(features[2], "mean" | "std" | "Mean")
"mean" | "std" | "Mean" %in% features[2]
"mean" %in% features[2]
?grep
grep("mean | sd", features[2])
grep("mean\\(\\)|std\\(\\)", features[2])
grepl("mean\\(\\)|std\\(\\)", features[2])
grepl("mean\\(\\)|std\\(\\)", features[,2])
filter(features, grepl("mean\\(\\)|std\\(\\)", features[,2]))
features
completeSet[,filter(features, grepl("mean\\(\\)|std\\(\\)", features[,2]))]
grep("mean\\(\\)|std\\(\\)", features[, 2])
grepl("mean\\(\\)|std\\(\\)", features[,2])
grep("mean\\(\\)|std\\(\\)", features[,2])
completeSet[,filter(features, grep("mean\\(\\)|std\\(\\)", features[,2]))]
completeSet[,grep("mean\\(\\)|std\\(\\)", features[,2])]
dim(completeSet[,grep("mean\\(\\)|std\\(\\)", features[,2])])
names(completeSet[,grep("mean\\(\\)|std\\(\\)", features[,2])])
names(completeSet) <- features[selectedFeatures, 2]
features <- read.table("./features.txt", stringsAsFactors=FALSE)
selectedFeatures <- grep("mean\\(\\)|std\\(\\)", features[,2])
completeSet <- completeSet[,selectedFeatures]
names(completeSet) <- features[selectedFeatures, 2]
names(completeSet)
?substr
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activity <- read.table("./data/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
completeLabel
completeLabel[,1]
activityLabel[completeLabel[,1],2]
activityLabel <- read.table("./activity_labels.txt")
activityLabel[completeLabel[,1],2]
completeLabel <- activityLabel[completeLabel[,1],2]
completeLabel
completeSet <- cbind(completeLabel, completeSet)
head(completeSet)
completeSet <- cbind(activity = completeLabel, completeSet)
head(completeSet)
source('~/.active-rstudio-document', echo=TRUE)
head(completeSet)
cleanedSet <- cbind(subject = completeSubject, activity = completeLabel, completeSet)
cleanedSet
head(cleanedSet)
source('~/.active-rstudio-document', echo=TRUE)
head(cleanedSet)
cleanedSet[1]
names(completeSubject) <- "subject"
cleanedSet <- cbind(subject = completeSubject, activity = completeLabel, completeSet)
head(cleanedSet)
?gather
library(tidyr)
?gather
gather(cleanedSet, features, 3:ncol(cleanedSet))
gather(cleanedSet, features, cleanedSet[3:ncol(cleanedSet)])
gather(cleanedSet, features, cleanedSet[3:ncol(cleanedSet),])
gather(cleanedSet, features, cleanedSet[,3:ncol(cleanedSet)])
data(mtcars)
mtcars
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
library(reshape2)
wide1 <- tidied <- dcast(narrow, cyl + gear ~ vs, max)
wide1
?dcast
dcast(cleanedSet, subject + activity ~ 3:ncol(cleanedSet), mean)
dcast(cleanedSet, subject + activity, mean)
wide1 <- tidied <- dcast(narrow, cyl + gear ~ vs, max)
wide1
group_by(cleanedSet, completeSubject)
group_by(cleanedSet, subject)
?group_by
group_by(cleanedSet, subject, activity)
colmean(group_by(cleanedSet, subject, activity))
?colMeans
colMeans(group_by(cleanedSet, subject, activity))
x <- group_by(cleanedSet, subject, activity)
summarise(x, colMeans(3:ncol(x)))
x
summarise(x, colMeans(tBodyAcc-mean()-X))
summarise(x, colMeans("tBodyAcc-mean()-X"))
summarise(x, colMeans(x))
summarise(x, mean(3:ncol(x))
